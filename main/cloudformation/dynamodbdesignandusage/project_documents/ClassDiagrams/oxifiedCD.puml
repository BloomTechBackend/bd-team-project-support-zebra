@startuml
class Booking {
    - bookingId : String
    - appointments : Appointment[]
    - appointmentCount : Integer
}

class Appointment {
    - appointmentId : String
    - date : String
    - time : String
    - service : Service
    - addressId : String
    - status : String
}

class Service {
    - serviceId : String
    - userAccountId : String
    - name : String
    - serviceTypeCost : BigDecimal
    - category : String
    - serviceType : String
    - status : String
}

class Review {
    - reviewId : String
    - serviceId : String
    - rating : Double
    - feedback : String
    - status : String
}

class UserAccount {
    - userAccountId : String
    - email : String
    - password : String
    - userType : String
    - status : String
    - lastName : String
    - firstName : String
    - contactNumber : String
    - addressId : String
    - birthdate : String
    - gender : String
    - image : String
    - bookingId : String
    - inboxes : Inbox[]
}

class ServiceProvider {
     - serviceProviderId : String
     - userAccountId : String
     - accountStatus : String
     - backgroundChecked : String
     - experience : String
     - language : Language[]
     - businessHours : String[]
     - availability : LocalDateTime[]
 }

 class Customer {
     - customerId : String
     - userAccountId : String
     - propertyLocation : Address[]
     - bookingId : String
 }

class Address {
    - addressId : String
    - houseNumber : String
    - lotNumber : String
    - blockNumber : String
    - street : String
    - barangay : String
    - cityOrMunicipality : String
    - province : String
    - zipCode : String
}

class Proof {
    - proofId : String
    - userAccountId : String
    - firstId : String
    - secondId : String
    - proofOfBilling : String
}


class Inbox {
    - inboxId : String
    - senderId : String
    - receiverId : String
    - messageToDisplay() : String
}

class Message {
    - messageId : String
    - inboxId : String
    - senderId : String
    - receiverId : String
    - dateTimeSent : String
    - messageBody : String
}

class SystemUtility {
    - generateUserAccountId() : String
    - generateServiceId() : String
    - generatePartitionKey() : String
}

'DynamoDB
class UserAccountDAO
class ServiceDAO
class AppointmentDAO

'Activity
class CreateUserAccountActivity
class GetUserAccontActivity
class UpdateUserAccountActivity
class CreateServiceActivity
class GetServiceActivity
class GetServicesByServiceProviderActivity
class UpdateServiceActivity
class CreateAppointmentActivity
class AddAppointmentToBookingActivity
class GetBookingAppointmentActivity
class UpdateBookingAppointmentActivity
class GetBookingActivity
class GetBookingByCustomerActivity
class GetBookingByServiceProviderActivity
class CreateReviewActivity
class GetReviewByServiceActivity
class UpdateReviewActivity
class CreateMessageActivity
class SendMessageActivity
class GetMessageByInboxIdActivity
class GetInboxByUserAccountActivity
class CreateMessageActivity
class SendMessageActivity
class GetMessageByInboxIdActivity
class GetInboxByUserAccountActivity

'Request
class CreateUserAccountRequest {
    - userAccountId : String
    - email : String
    - password : String
    - userType : String
    - status : String
}

class GetUserAccountRequest {
    - userAccountId : String
    - userType : String
}

class UpdateUserAccountRequest {
    - userAccountId : String
    - userType : String
    - password : String
    - status : String
    - lastName : String
    - firstName : String
    - contactNumber : String
    - email : String
    - addressId : String
    - birthdate : String
    - gender : String
    - image : String
}

class CreateServiceRequest {
    - serviceId : String
    - serviceProvider : ServiceProvider
    - customerName : String
    - serviceTypeCost : BigDecimal
    - category : String
    - serviceType : String
    - status : String
}

class GetServiceRequest {
    - serviceId : String
}

class GetServicesByServiceProviderRequest {
    - serviceProviderId
}

class UpdateServiceRequest {
    - serviceId : String
    - userAccountId : String
    - name : String
    - serviceTypeCost : BigDecimal
    - category : String
    - serviceType : String
    - status : String
}

class AddAppointmentToBookingRequest {
    - appointmentId :String
    - date : String
    - time : String
    - service : Service
    - address : Address
    - status :String
}

class GetBookingByUserAccountRequest {
    - userAccountId : String
    - userType : String
}

class GetBooking
class CreateMessageRequest
class SendMessageRequest
class GetMessageByInboxIdRequest
class GetInboxByUserAccountRequest

class UpdateBookingAppointmentRequest {
    - appointmentId : String
    - date : String
    - time : String
    - status : String
}

class CreateReviewRequest {
    - reviewId : String
    - serviceId : String
    - rating : Double
    - feedback : String
    - status : String
}

class GetReviewByServiceRequest {
    - reviewId : String
    - serviceId : String
}

class UpdateReviewRequest {
    - reviewId : String
    - serviceId : String
    - status : String
}

class CreateInboxRequest {
    - inboxId : String
    - serviceId : String
    - receiverId : String
}

class CreateMessageRequest {
    - inboxId : String
    - messageId : String
    - senderId : String
    - receiverId : String
    - dateTimeSent : String
    - messageBody : String
}

class GetMessageByInboxIdRequest {
    - inboxId : String
}

class GetInboxByUserAccountRequest {
    - userAccountId : String
}

'Result
class CreateUserAccountResult
class GetUserAccountResult
class UpdateUserAccountResult
class CreateServiceResult
class GetServiceResult
class GetServicesByServiceProviderResult
class UpdateServiceResult
class CreateAppointmentResult
class AddAppointmentToBookingsResult
class GetAppointmentBookingResult
class UpdateAppointmentBookingResult
class GetBookingResult
class GetBookingByCustomerResult
class GetBookingByServiceProviderResult
class CreateReviewResult
class GetReviewByServiceResult
class UpdateReviewResult
class CreateMessageResult
class SendMessageResult
class GetMessageByInboxIdResult
class GetInboxByUserAccountResult

'Models
class BookingModel {
    - bookingId : String
    - appointments : Appointment[]
    - appointmentCount : Integer
}

class AppointmentModel {
    - appointmentId : String
    - date : String
    - time : String
    - service : Service
    - addressId : String
    - status : String
}

class ServiceModel {
    - serviceId : String
    - userAccountId : String
    - name : String
    - serviceTypeCost : BigDecimal
    - category : String
    - serviceType : String
    - status : String
}

class ReviewModel {
    - reviewId : String
    - serviceId : String
    - rating : Double
    - feedback : String
    - status : String
}

class UserAccountModel {
    - userAccountId : String
    - email : String
    - password : String
    - userType : String
    - status : String
    - firstName : String
    - lastName : String
    - contactNumber : String
    - addressId : String
    - birthdate : String
    - gender : String
    - image : String
    - inbox : Set<>
}

class AddressModel {
    - addressId : String
    - houseNumber : String
    - lotNumber : String
    - blockNumber : String
    - street : String
    - barangay : String
    - cityOrMunicipality : String
    - province : String
    - zipCode : String
}

class ProofModel {
    - proofId : String
    - firstId : String
    - secondId :String
    - proofOfBilling : String
}

class ServiceProviderModel {
    - userAccountId : String
    - serviceProviderId : String
    - accountStatus : String
    - backgroundChecked : String
    - experience : String
    - language : Language[]
    - businessHours : String[]
    - availability : LocalDateTime[]
    - bookingId : String
}

class CustomerModel {
    - userAccountId : String
    - customerId : String
    - propertyLocation : Address[]
    - bookingId : String
}

class InboxModel {
    - inboxId : String
    - senderId : String
    - receiverId : String
    - messageToDisplay : String
}

class MessageModel {
    - messageId : String
    - inboxId : String
    - senderId : String
    - receiverId : String
    - dateTimeSent : String
    - messageBody : String
}

enum ServiceType {
    + PER_HOUR
    + JOB_ORDER
    + CONTRACTUAL
}

enum Language {
    + CEBUANO
    + TAGALOG
    + ENGLISH
}

enum Time {
    + 8AM
    + 9AM
    + 10AM
    + 11AM
    + 1PM
    + 2PM
    + 3PM
    + 4PM
    + 5PM
}

enum Status {
    + ONGOING
    + UPCOMING
    + CANCELLED
    + COMPLETED
    + APPROVED
    + DENIED
    + ACTIVE
    + INACTIVE
}

enum Experience {
    + LESS_THAN_3YRS
    + MORE_THAN_3YRS
}

enum UserType {
    + CUSTOMER
    + SERVICE_PROVIDER
    + ADMIN
}

class ModelConverter {
    + toBookingModel()
    + toAppointmentModel ()
    + toServiceModel()
    + toReviewModel()
    + toUserAccountModel()
    + toAddressModel ()
    + toProofModel()
    + toServiceProviderModel()
    + toCustomerModel()
    + toInboxModel()
    + toMessageModel()
}

Booking -> Appointment

Appointment -> Service
Appointment -> Address

Service --> UserAccount
Service --> ServiceType
Service --> Status

Review --> Service
Review --> Status

UserAccount --> UserType
UserAccount --> Status
UserAccount -> Address
UserAccount -> Booking
UserAccount -> Inbox

Proof --> UserAccount

ServiceProvider --> UserAccount
ServiceProvider --> Proof
ServiceProvider --> Status
ServiceProvider -> Experience
ServiceProvider -> Language
ServiceProvider -> Time

Customer --> UserAccount
Customer --> Address
Customer --> Booking

Inbox --> Message

Message --> Inbox

SystemUtility -> Service
SystemUtility -> UserAccount

UserAccountDAO --> UserAccount
ServiceDAO --> Service
AppointmentDAO --> Appointment

hide @unlinked
@enduml